<Activity mc:Ignorable="sap sap2010" x:Class="Main" mva:VisualBasic.Settings="{x:Null}" sap:VirtualizedContainerService.HintSize="1634,3883" sap2010:WorkflowViewState.IdRef="ActivityBuilder_1" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:sd="clr-namespace:System.Data;assembly=System.Data" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="23">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>UiPath.Excel</x:String>
      <x:String>System.Xml.Serialization</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="23">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>UiPath.Mail</AssemblyReference>
      <AssemblyReference>UiPath.CV</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <Sequence DisplayName="送金明細入力" sap:VirtualizedContainerService.HintSize="1108,3818" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="scg:Dictionary(x:String, x:String)" Name="settingList" />
      <Variable x:TypeArguments="x:String" Name="baseDir" />
      <Variable x:TypeArguments="x:String" Name="targetDirectory" />
      <Variable x:TypeArguments="s:String[]" Name="targetFiles" />
      <Variable x:TypeArguments="sd:DataTable" Name="inputDataList" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="初期処理実行" sap:VirtualizedContainerService.HintSize="1066,87" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_1" UnSafe="False" WorkflowFileName="初期処理.xaml">
      <ui:InvokeWorkflowFile.Arguments>
        <OutArgument x:TypeArguments="scg:Dictionary(x:String, x:String)" x:Key="settingList">[settingList]</OutArgument>
        <OutArgument x:TypeArguments="x:String" x:Key="baseDir">[baseDir]</OutArgument>
      </ui:InvokeWorkflowFile.Arguments>
    </ui:InvokeWorkflowFile>
    <Assign DisplayName="代入" sap:VirtualizedContainerService.HintSize="1066,60" sap2010:WorkflowViewState.IdRef="Assign_1">
      <Assign.To>
        <OutArgument x:TypeArguments="x:String">[targetDirectory]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="x:String">[settingList("処理対象ファイル格納先")]</InArgument>
      </Assign.Value>
    </Assign>
    <Assign DisplayName="代入" sap:VirtualizedContainerService.HintSize="1066,60" sap2010:WorkflowViewState.IdRef="Assign_2">
      <Assign.To>
        <OutArgument x:TypeArguments="s:String[]">[targetFiles]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="s:String[]">[Directory.GetFiles(targetDirectory, "*.xlsx", SearchOption .TopDirectoryOnly)]</InArgument>
      </Assign.Value>
    </Assign>
    <If Condition="[targetFiles.Length &gt; 0]" DisplayName="条件分岐" sap:VirtualizedContainerService.HintSize="1066,3399" sap2010:WorkflowViewState.IdRef="If_1">
      <If.Then>
        <Sequence DisplayName="シーケンス" sap:VirtualizedContainerService.HintSize="687,3251" sap2010:WorkflowViewState.IdRef="Sequence_4">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ui:ForEach x:TypeArguments="x:String" CurrentIndex="{x:Null}" DisplayName="繰り返し (コレクションの各要素)" sap:VirtualizedContainerService.HintSize="645,3060" sap2010:WorkflowViewState.IdRef="ForEach`1_2" Values="[targetFiles]">
            <ui:ForEach.Body>
              <ActivityAction x:TypeArguments="x:String">
                <ActivityAction.Argument>
                  <DelegateInArgument x:TypeArguments="x:String" Name="file" />
                </ActivityAction.Argument>
                <Sequence DisplayName="本体" sap:VirtualizedContainerService.HintSize="609,2926" sap2010:WorkflowViewState.IdRef="Sequence_3">
                  <Sequence.Variables>
                    <Variable x:TypeArguments="sd:DataTable" Name="workDataList" />
                    <Variable x:TypeArguments="sd:DataTable" Name="tmpDataList" />
                    <Variable x:TypeArguments="x:Boolean" sap2010:Annotation.AnnotationText="１回目で超過金に充てた駐車料金を２回目に充てる処理" Name="secondParkingProcess" />
                  </Sequence.Variables>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <Assign DisplayName="代入" sap:VirtualizedContainerService.HintSize="567,60" sap2010:WorkflowViewState.IdRef="Assign_3">
                    <Assign.To>
                      <OutArgument x:TypeArguments="sd:DataTable">[inputDataList]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="sd:DataTable">[new DataTable]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <ui:ExcelApplicationScope Password="{x:Null}" DisplayName="Excel アプリケーション スコープ" sap:VirtualizedContainerService.HintSize="567,260" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_1" WorkbookPath="[file]">
                    <ui:ExcelApplicationScope.Body>
                      <ActivityAction x:TypeArguments="ui:WorkbookApplication">
                        <ActivityAction.Argument>
                          <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
                        </ActivityAction.Argument>
                        <Sequence DisplayName="実行" sap:VirtualizedContainerService.HintSize="376,151" sap2010:WorkflowViewState.IdRef="Sequence_2">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <ui:ExcelReadRange AddHeaders="True" DataTable="[inputDataList]" DisplayName="範囲を読み込み" sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="ExcelReadRange_1" SheetName="Sheet1">
                            <ui:ExcelReadRange.Range>
                              <InArgument x:TypeArguments="x:String">
                                <Literal x:TypeArguments="x:String" Value="" />
                              </InArgument>
                            </ui:ExcelReadRange.Range>
                          </ui:ExcelReadRange>
                        </Sequence>
                      </ActivityAction>
                    </ui:ExcelApplicationScope.Body>
                  </ui:ExcelApplicationScope>
                  <Assign DisplayName="初期化" sap:VirtualizedContainerService.HintSize="567,60" sap2010:WorkflowViewState.IdRef="Assign_15">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:Boolean">[secondParkingProcess]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:Boolean">False</InArgument>
                    </Assign.Value>
                  </Assign>
                  <If sap2010:Annotation.AnnotationText="前回、駐車料金と超過金として割り当てた場合、&#xA;前回の出力結果をもとに、駐車料金の余りを超過金とした情報を抜き出し、超過金を駐車料金に割り当てる。&#xA;このため、データテーブルから前回の判定結果（入居者判定、判定、滞納有無）を削除し、&#xA;前回割り当てた 駐車場代と超過金の情報を前回分として保存する&#xA;これにより、駐車料金の入金入力処理の大幅な改良はしなくてよいはず。" Condition="[inputDataList.Columns.Contains(&quot;超過金充当額&quot;)]" DisplayName="駐車料金を、前回の超過金から割り当てるため、テーブルを加工" sap:VirtualizedContainerService.HintSize="567,1980" sap2010:WorkflowViewState.IdRef="If_3">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <If.Then>
                      <Sequence DisplayName="インプットのテーブル加工処理" sap:VirtualizedContainerService.HintSize="396,1745" sap2010:WorkflowViewState.IdRef="Sequence_15">
                        <Sequence.Variables>
                          <Variable x:TypeArguments="x:String" Name="dummyText" />
                        </Sequence.Variables>
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <Assign DisplayName="代入" sap:VirtualizedContainerService.HintSize="354,60" sap2010:WorkflowViewState.IdRef="Assign_16">
                          <Assign.To>
                            <OutArgument x:TypeArguments="sd:DataTable">[workDataList]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="sd:DataTable">[new DataTable]</InArgument>
                          </Assign.Value>
                        </Assign>
                        <Assign DisplayName="代入" sap:VirtualizedContainerService.HintSize="354,60" sap2010:WorkflowViewState.IdRef="Assign_17">
                          <Assign.To>
                            <OutArgument x:TypeArguments="sd:DataTable">[tmpDataList]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="sd:DataTable">[new DataTable]</InArgument>
                          </Assign.Value>
                        </Assign>
                        <ui:FilterDataTable sap2010:Annotation.AnnotationText="inputDataList内の 超過金充当額が 0以上のデータを抜き出し&#xA;inputDatalist内の 入居者判定、判定、滞納有無 欄を削除" DataTable="[inputDataList]" DisplayName="データ テーブルをフィルタリング" FilterRowsMode="Keep" sap:VirtualizedContainerService.HintSize="354,116" sap2010:WorkflowViewState.IdRef="FilterDataTable_3" OutputDataTable="[workDataList]" SelectColumnsMode="Remove">
                          <ui:FilterDataTable.Filters>
                            <scg:List x:TypeArguments="ui:FilterOperationArgument" Capacity="4">
                              <ui:FilterOperationArgument BooleanOperator="And" Operator="GT">
                                <ui:FilterOperationArgument.Column>
                                  <InArgument x:TypeArguments="x:String">["超過金充当額"]</InArgument>
                                </ui:FilterOperationArgument.Column>
                                <ui:FilterOperationArgument.Operand>
                                  <InArgument x:TypeArguments="x:Int32">[0]</InArgument>
                                </ui:FilterOperationArgument.Operand>
                              </ui:FilterOperationArgument>
                            </scg:List>
                          </ui:FilterDataTable.Filters>
                          <ui:FilterDataTable.SelectColumns>
                            <scg:List x:TypeArguments="InArgument" Capacity="4">
                              <InArgument x:TypeArguments="x:String">["入居者判定"]</InArgument>
                              <InArgument x:TypeArguments="x:String">["判定"]</InArgument>
                              <InArgument x:TypeArguments="x:String">["滞納有無"]</InArgument>
                            </scg:List>
                          </ui:FilterDataTable.SelectColumns>
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                        </ui:FilterDataTable>
                        <ui:ForEachRow CurrentIndex="{x:Null}" sap2010:Annotation.AnnotationText="超過金充当額の情報を金額へコピー" DataTable="[workDataList]" DisplayName="繰り返し (各行)" sap:VirtualizedContainerService.HintSize="354,331" sap2010:WorkflowViewState.IdRef="ForEachRow_2">
                          <ui:ForEachRow.Body>
                            <ActivityAction x:TypeArguments="sd:DataRow">
                              <ActivityAction.Argument>
                                <DelegateInArgument x:TypeArguments="sd:DataRow" Name="row" />
                              </ActivityAction.Argument>
                              <Sequence DisplayName="本体" sap:VirtualizedContainerService.HintSize="304,152" sap2010:WorkflowViewState.IdRef="Sequence_11">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <Assign DisplayName="代入" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_18">
                                  <Assign.To>
                                    <OutArgument x:TypeArguments="x:Object">[row("金額")]</OutArgument>
                                  </Assign.To>
                                  <Assign.Value>
                                    <InArgument x:TypeArguments="x:Object">[row("超過金充当額").ToString]</InArgument>
                                  </Assign.Value>
                                </Assign>
                              </Sequence>
                            </ActivityAction>
                          </ui:ForEachRow.Body>
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                        </ui:ForEachRow>
                        <Assign DisplayName="inputDataListを念のためバックアップ" sap:VirtualizedContainerService.HintSize="354,60" sap2010:WorkflowViewState.IdRef="Assign_19">
                          <Assign.To>
                            <OutArgument x:TypeArguments="sd:DataTable">[tmpDataList]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="sd:DataTable">[inputDataList.Copy]</InArgument>
                          </Assign.Value>
                        </Assign>
                        <ui:ClearDataTable sap2010:Annotation.AnnotationText="inputDataListを初期化" DataTable="[inputDataList]" DisplayName="inputDataList データ テーブルをクリア" sap:VirtualizedContainerService.HintSize="354,53" sap2010:WorkflowViewState.IdRef="ClearDataTable_2">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                        </ui:ClearDataTable>
                        <ui:CommentOut DisplayName="コメント アウト" sap:VirtualizedContainerService.HintSize="354,51" sap2010:WorkflowViewState.IdRef="CommentOut_4">
                          <ui:CommentOut.Body>
                            <Sequence DisplayName="無視されたアクティビティ" sap:VirtualizedContainerService.HintSize="376,208" sap2010:WorkflowViewState.IdRef="Sequence_12">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <ui:FilterDataTable sap2010:Annotation.AnnotationText="workDataListから &#xA;超過金充当額 欄を削除&#xA;出力はinputDataList" DataTable="[workDataList]" DisplayName="データ テーブルをフィルタリング" FilterRowsMode="Remove" sap:VirtualizedContainerService.HintSize="334,116" sap2010:WorkflowViewState.IdRef="FilterDataTable_4" OutputDataTable="[inputDataList]" SelectColumnsMode="Remove">
                                <ui:FilterDataTable.Filters>
                                  <scg:List x:TypeArguments="ui:FilterOperationArgument" Capacity="4">
                                    <ui:FilterOperationArgument Column="{x:Null}" Operand="{x:Null}" BooleanOperator="And" Operator="GT" />
                                  </scg:List>
                                </ui:FilterDataTable.Filters>
                                <ui:FilterDataTable.SelectColumns>
                                  <scg:List x:TypeArguments="InArgument" Capacity="4">
                                    <InArgument x:TypeArguments="x:String">["超過金充当額"]</InArgument>
                                  </scg:List>
                                </ui:FilterDataTable.SelectColumns>
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                              </ui:FilterDataTable>
                            </Sequence>
                          </ui:CommentOut.Body>
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                        </ui:CommentOut>
                        <Assign DisplayName="駐車場１充当額を前回分とする" sap:VirtualizedContainerService.HintSize="354,60" sap2010:WorkflowViewState.IdRef="Assign_20">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:String">[workDataList.Columns("駐車場１充当額").ColumnName]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:String">前回駐車場１充当額</InArgument>
                          </Assign.Value>
                        </Assign>
                        <Assign DisplayName="駐車場２充当額を前回分とする" sap:VirtualizedContainerService.HintSize="354,60" sap2010:WorkflowViewState.IdRef="Assign_21">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:String">[workDataList.Columns("駐車場２充当額").ColumnName]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:String">前回駐車場2充当額</InArgument>
                          </Assign.Value>
                        </Assign>
                        <Assign DisplayName="超過金充当額を前回分とする" sap:VirtualizedContainerService.HintSize="354,60" sap2010:WorkflowViewState.IdRef="Assign_22">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:String">[workDataList.Columns("超過金充当額").ColumnName]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:String">前回超過金充当額</InArgument>
                          </Assign.Value>
                        </Assign>
                        <Assign DisplayName="inputDataListをバックアップ" sap:VirtualizedContainerService.HintSize="354,60" sap2010:WorkflowViewState.IdRef="Assign_23">
                          <Assign.To>
                            <OutArgument x:TypeArguments="sd:DataTable">[inputDataList]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="sd:DataTable">[workDataList.Copy]</InArgument>
                          </Assign.Value>
                        </Assign>
                        <Assign DisplayName="代入" sap:VirtualizedContainerService.HintSize="354,60" sap2010:WorkflowViewState.IdRef="Assign_24">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:Boolean">[secondParkingProcess]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:Boolean">True</InArgument>
                          </Assign.Value>
                        </Assign>
                        <ui:CommentOut DisplayName="コメント アウト" sap:VirtualizedContainerService.HintSize="354,51" sap2010:WorkflowViewState.IdRef="CommentOut_5">
                          <ui:CommentOut.Body>
                            <Sequence DisplayName="無視されたアクティビティ" sap:VirtualizedContainerService.HintSize="242,114" sap2010:WorkflowViewState.IdRef="Sequence_13">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <ui:OutputDataTable DataTable="[inputDataList]" DisplayName="dummyデータ テーブルを出力" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="OutputDataTable_2" Text="[dummyText]" />
                            </Sequence>
                          </ui:CommentOut.Body>
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                        </ui:CommentOut>
                        <ui:CommentOut DisplayName="コメント アウト" sap:VirtualizedContainerService.HintSize="354,51" sap2010:WorkflowViewState.IdRef="CommentOut_6">
                          <ui:CommentOut.Body>
                            <Sequence DisplayName="無視されたアクティビティ" sap:VirtualizedContainerService.HintSize="272,153" sap2010:WorkflowViewState.IdRef="Sequence_14">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <WriteLine DisplayName="dummy1 行を書き込み" sap:VirtualizedContainerService.HintSize="230,61" sap2010:WorkflowViewState.IdRef="WriteLine_2" Text="[dummyText]" />
                            </Sequence>
                          </ui:CommentOut.Body>
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                        </ui:CommentOut>
                      </Sequence>
                    </If.Then>
                  </If>
                  <TryCatch DisplayName="トライ キャッチ" sap:VirtualizedContainerService.HintSize="567,314" sap2010:WorkflowViewState.IdRef="TryCatch_2">
                    <TryCatch.Try>
                      <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="AS400処理を実施" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_2" UnSafe="False" WorkflowFileName="AS400処理.xaml">
                        <ui:InvokeWorkflowFile.Arguments>
                          <InArgument x:TypeArguments="sd:DataTable" x:Key="inputDataList">
                            <mva:VisualBasicValue x:TypeArguments="sd:DataTable" ExpressionText="inputDataList" />
                          </InArgument>
                          <InArgument x:TypeArguments="x:Boolean" x:Key="secondParkingProcess">
                            <mva:VisualBasicValue x:TypeArguments="x:Boolean" ExpressionText="secondParkingProcess" />
                          </InArgument>
                        </ui:InvokeWorkflowFile.Arguments>
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                      </ui:InvokeWorkflowFile>
                    </TryCatch.Try>
                    <TryCatch.Catches>
                      <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="404,21" sap2010:WorkflowViewState.IdRef="Catch`1_2">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <ActivityAction x:TypeArguments="s:Exception">
                          <ActivityAction.Argument>
                            <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                          </ActivityAction.Argument>
                          <ui:LogMessage DisplayName="例外発生メッセージをログ出力" sap:VirtualizedContainerService.HintSize="334,91" sap2010:WorkflowViewState.IdRef="LogMessage_1" Level="Error" Message="[&quot;想定外のエラーが発生しました。詳細=[&quot; + exception.Message + &quot;]&quot;]" />
                        </ActivityAction>
                      </Catch>
                    </TryCatch.Catches>
                    <TryCatch.Finally>
                      <ui:ExcelApplicationScope Password="{x:Null}" DisplayName="Excel アプリケーション スコープ" sap:VirtualizedContainerService.HintSize="845,288" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_2" WorkbookPath="[path.Combine(settingList(&quot;処理結果ファイル格納先&quot;), path.GetFileNameWithoutExtension(file) + &quot;_&quot; + now.ToString(&quot;yyyyMMddHHmmss&quot;) + &quot;.xlsx&quot;)]">
                        <ui:ExcelApplicationScope.Body>
                          <ActivityAction x:TypeArguments="ui:WorkbookApplication">
                            <ActivityAction.Argument>
                              <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
                            </ActivityAction.Argument>
                            <Sequence DisplayName="実行" sap:VirtualizedContainerService.HintSize="376,179" sap2010:WorkflowViewState.IdRef="Sequence_5">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <ui:ExcelWriteRange AddHeaders="True" DataTable="[inputDataList]" DisplayName="範囲に書き込み" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelWriteRange_1" SheetName="Sheet1" StartingCell="A1" />
                            </Sequence>
                          </ActivityAction>
                        </ui:ExcelApplicationScope.Body>
                      </ui:ExcelApplicationScope>
                    </TryCatch.Finally>
                  </TryCatch>
                </Sequence>
              </ActivityAction>
            </ui:ForEach.Body>
          </ui:ForEach>
          <ui:MessageBox Caption="{x:Null}" ChosenButton="{x:Null}" DisplayName="メッセージ ボックス" sap:VirtualizedContainerService.HintSize="645,59" sap2010:WorkflowViewState.IdRef="MessageBox_1" Text="[&quot;処理が終了しました。&quot; + Environment.NewLine + &quot;処理結果を確認してください。&quot;]" />
        </Sequence>
      </If.Then>
      <If.Else>
        <ui:MessageBox Caption="{x:Null}" ChosenButton="{x:Null}" DisplayName="メッセージ ボックス" sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="MessageBox_2" Text="[&quot;処理対象ファイルがありません。&quot; + Environment.NewLine + &quot;フォルダを確認してください。&quot;]" />
      </If.Else>
    </If>
  </Sequence>
</Activity>